<rss version="2.0">
  <channel>
    <title>Welcome to Jet Tech blog.</title>
    <link>http://tech.jet.com/</link>
    <description>This is the Jet Technology blog</description>
    <item>
      <title>Azure Cloud Services at Jet.com</title>
      <guid>http://tech.jet.com//blog/2016/03-07-azure-cloud-services-at-jet-com</guid>
      <link>http://tech.jet.com//blog/2016/03-07-azure-cloud-services-at-jet-com/index.html</link>
      <pubDate>Mon, 07 Mar 2016 11:48:24 GMT</pubDate>
      <description>&lt;hr /&gt;

&lt;p&gt;&lt;img src="/images/jetcom.png" alt="Jet Cloud" /&gt;&lt;/p&gt;

&lt;p&gt;Jet makes heavy use of Azure Cloud Services for running our platform. We have hundreds of services that power Jet.com whether it's pricing, order processing, user management, product catalog, etc - it's running in a Cloud Service. These services have different requirements around scale, security, availability and deployment. I will cover how Azure helps us meet these requirements and where Azure PaaS falls a bit short.&lt;/p&gt;


</description>
      <image></image>
      <postAuthor>Drew Schaeffer</postAuthor>
    </item>
    <item>
      <title>The Jet Engine we built in 2015.</title>
      <guid>http://tech.jet.com//blog/2016/02-05-the-jet-engine-we-built-in-2015</guid>
      <link>http://tech.jet.com//blog/2016/02-05-the-jet-engine-we-built-in-2015/index.html</link>
      <pubDate>Fri, 05 Feb 2016 11:14:03 GMT</pubDate>
      <description>&lt;hr /&gt;

&lt;p&gt;&lt;img src="/images/jetengine.PNG" alt="Jet Engine" /&gt;&lt;/p&gt;

&lt;h3&gt;So you want to build a massive online eCommerce platform?&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;"Because it's probably harder to build a massive eCommerce platform than an actual Jet engine."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A lot of friends, and former colleagues, want to know what its been like to build Jet.com. I figured I would take a little time to talk about some of the things we've built as a team as well as reflect on the last year. I'd like to share some things that are working great, some of the things that aren't and what the game plan is for the new year; meaning what are we going to build next.&lt;/p&gt;


</description>
      <image></image>
      <postAuthor>Louie Bacaj</postAuthor>
    </item>
    <item>
      <title>Telling Weeds from Wheat: Coding Interview for F# Developer Candidates</title>
      <guid>http://tech.jet.com//blog/2016/01-30-telling-weeds-from-wheat-coding-interview-for-f-developer-candidates</guid>
      <link>http://tech.jet.com//blog/2016/01-30-telling-weeds-from-wheat-coding-interview-for-f-developer-candidates/index.html</link>
      <pubDate>Sat, 30 Jan 2016 03:49:06 GMT</pubDate>
      <description>&lt;p&gt;Life is full of extraordinary coincidences.
Couple of years ago my job was managing few folks like this &lt;a href="https://github.com/dmitry-a-morozov"&gt;valuable member of F# community&lt;/a&gt;. I was toying with F#
just for the sake of not looking a complete idiot while communicating with my subordinates. As my F# skills were insufficient for messing with production code
I was diligently working through &lt;a href="https://projecteuler.net/"&gt;Project Euler&lt;/a&gt; tasks at my leisure time and capturing my modest achievements into this
&lt;a href="https://infsharpmajor.wordpress.com/"&gt;YAPES&lt;/a&gt; (Yet Another Project Euler Series). It took me about a year to grok expressing myself in F# along solving the first
90 problems of Project Euler in more or less idiomatic way, thanks to colleagues’ helpful critique.&lt;/p&gt;

&lt;p&gt;Being already able "thinking functionally" I once bumped into &lt;a href="http://www.amazon.com/coding-interview-problems-Google-solutions/dp/1482799014"&gt;this book&lt;/a&gt;.
The book itself wasn't great, but it prompted a hypothetical setting: what if Google would be hiring F# programmers?
Then how solutions to (supposedly) top 10 Google coding interview problems may look like in idiomatic F#? I’ve posted my
&lt;a href="https://infsharpmajor.wordpress.com/2013/04/24/if-google-would-be-looking-to-hire-f-programmers-part-1/"&gt;solution to the first of the problems&lt;/a&gt; and then all of a sudden
number of visits to my blog skyrocketed. Came out my post was captured by &lt;a href="https://sergeytihon.wordpress.com/category/f-weekly/"&gt;F# Weekly&lt;/a&gt; and followed by
&lt;a href="http://research.microsoft.com/en-us/people/dsyme/"&gt;Don Syme's&lt;/a&gt; twit, so significant portion of active F# community took a peek too.&lt;/p&gt;

&lt;p&gt;Today is 2016, for the second year my full-time job is F# developer, and &lt;a href="http://stackoverflow.com/jobs/companies/jet-com"&gt;Jet.com is really hiring F# programmers&lt;/a&gt;. Beats me, who could predict?&lt;/p&gt;


</description>
      <image></image>
      <postAuthor>Gene Belitski</postAuthor>
    </item>
    <item>
      <title>Microservices &amp; Messaging</title>
      <guid>http://tech.jet.com//blog/2016/01-26-microservices-messaging</guid>
      <link>http://tech.jet.com//blog/2016/01-26-microservices-messaging/index.html</link>
      <pubDate>Tue, 26 Jan 2016 10:49:42 GMT</pubDate>
      <description>&lt;p&gt;Microservices are used heavily at Jet. We blogged about this in the &lt;a href="http://techgroup.jet.com/blog/2015/11-27-how-jet-build-microservices-with/index.html"&gt;past&lt;/a&gt; and spoke about it in a &lt;a href="https://vimeo.com/109343720"&gt;few&lt;/a&gt; &lt;a href="https://vimeo.com/144692770"&gt;presentations&lt;/a&gt;. Microservices communicate with each other through remote procedure calls or asynchronous messaging.&lt;/p&gt;

&lt;h2&gt;The Jet Microservice template&lt;/h2&gt;

&lt;p&gt;Microservices in Jet typically follow the pattern described below.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;A set of &lt;code&gt;input&lt;/code&gt; that this microservice can understand&lt;/p&gt;
&lt;table class="pre"&gt;&lt;tr&gt;&lt;td class="lines"&gt;&lt;pre class="fssnip"&gt;
&lt;span class="l"&gt;1: &lt;/span&gt;
&lt;span class="l"&gt;2: &lt;/span&gt;
&lt;span class="l"&gt;3: &lt;/span&gt;
&lt;/pre&gt;
&lt;/td&gt;
&lt;td class="snippet"&gt;&lt;pre class="fssnip"&gt;
&lt;span class="k"&gt;type&lt;/span&gt; &lt;span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i"&gt;Input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 
    | &lt;span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i"&gt;Shipped&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="i"&gt;MerchantOrderShipped&lt;/span&gt; 
    | &lt;span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i"&gt;Cancelled&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="i"&gt;MerchantOrderCancelled&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A set of &lt;code&gt;output&lt;/code&gt; that this microservice will generate.&lt;/p&gt;
&lt;table class="pre"&gt;&lt;tr&gt;&lt;td class="lines"&gt;&lt;pre class="fssnip"&gt;
&lt;span class="l"&gt;1: &lt;/span&gt;
&lt;span class="l"&gt;2: &lt;/span&gt;
&lt;/pre&gt;
&lt;/td&gt;
&lt;td class="snippet"&gt;&lt;pre class="fssnip"&gt;
&lt;span class="k"&gt;type&lt;/span&gt; &lt;span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i"&gt;Output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 
      | &lt;span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i"&gt;Update&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="i"&gt;Order&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A &lt;code&gt;decode&lt;/code&gt; phase that basically deserializes the incoming message on a pipe to an appropriate strongly typed input.&lt;/p&gt;
&lt;table class="pre"&gt;&lt;tr&gt;&lt;td class="lines"&gt;&lt;pre class="fssnip"&gt;
&lt;span class="l"&gt;1: &lt;/span&gt;
&lt;span class="l"&gt;2: &lt;/span&gt;
&lt;span class="l"&gt;3: &lt;/span&gt;
&lt;span class="l"&gt;4: &lt;/span&gt;
&lt;/pre&gt;
&lt;/td&gt;
&lt;td class="snippet"&gt;&lt;pre class="fssnip"&gt;
&lt;span class="k"&gt;let&lt;/span&gt; &lt;span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="i"&gt;decode&lt;/span&gt; &lt;span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="i"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 
     &lt;span class="k"&gt;match&lt;/span&gt; &lt;span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="i"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="i"&gt;eventType&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; 
    | &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Shipped&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;-&amp;gt;&lt;/span&gt; &lt;span onmouseout="hideTip(event, 'fs1', 9)" onmouseover="showTip(event, 'fs1', 9)" class="i"&gt;Input&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span onmouseout="hideTip(event, 'fs2', 10)" onmouseover="showTip(event, 'fs2', 10)" class="i"&gt;Shipped&lt;/span&gt;(&lt;span onmouseout="hideTip(event, 'fs7', 11)" onmouseover="showTip(event, 'fs7', 11)" class="i"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="i"&gt;payload&lt;/span&gt; &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="i"&gt;toMerchantOrderShipped&lt;/span&gt;) 
    | &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Cancelled&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;-&amp;gt;&lt;/span&gt; &lt;span onmouseout="hideTip(event, 'fs1', 12)" onmouseover="showTip(event, 'fs1', 12)" class="i"&gt;Input&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span onmouseout="hideTip(event, 'fs3', 13)" onmouseover="showTip(event, 'fs3', 13)" class="i"&gt;Cancelled&lt;/span&gt; (&lt;span onmouseout="hideTip(event, 'fs7', 14)" onmouseover="showTip(event, 'fs7', 14)" class="i"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="i"&gt;payload&lt;/span&gt; &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="i"&gt;toMerchantOrderCancelled&lt;/span&gt;)&lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A &lt;code&gt;handle&lt;/code&gt; phase that takes an input, runs some business logic to calculate what side-effects should occur and generates the &lt;code&gt;Output&lt;/code&gt; accordingly.&lt;/p&gt;
&lt;table class="pre"&gt;&lt;tr&gt;&lt;td class="lines"&gt;&lt;pre class="fssnip"&gt;
&lt;span class="l"&gt; 1: &lt;/span&gt;
&lt;span class="l"&gt; 2: &lt;/span&gt;
&lt;span class="l"&gt; 3: &lt;/span&gt;
&lt;span class="l"&gt; 4: &lt;/span&gt;
&lt;span class="l"&gt; 5: &lt;/span&gt;
&lt;span class="l"&gt; 6: &lt;/span&gt;
&lt;span class="l"&gt; 7: &lt;/span&gt;
&lt;span class="l"&gt; 8: &lt;/span&gt;
&lt;span class="l"&gt; 9: &lt;/span&gt;
&lt;span class="l"&gt;10: &lt;/span&gt;
&lt;span class="l"&gt;11: &lt;/span&gt;
&lt;/pre&gt;
&lt;/td&gt;
&lt;td class="snippet"&gt;&lt;pre class="fssnip"&gt;
&lt;span class="k"&gt;let&lt;/span&gt; &lt;span onmouseout="hideTip(event, 'fs8', 15)" onmouseover="showTip(event, 'fs8', 15)" class="i"&gt;handle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;
    | &lt;span onmouseout="hideTip(event, 'fs2', 16)" onmouseover="showTip(event, 'fs2', 16)" class="i"&gt;Shipped&lt;/span&gt; (&lt;span onmouseout="hideTip(event, 'fs9', 17)" onmouseover="showTip(event, 'fs9', 17)" class="i"&gt;mo&lt;/span&gt;) &lt;span class="k"&gt;-&amp;gt;&lt;/span&gt; &lt;span onmouseout="hideTip(event, 'fs10', 18)" onmouseover="showTip(event, 'fs10', 18)" class="i"&gt;async&lt;/span&gt; {
            &lt;span class="c"&gt;//load the order&lt;/span&gt;
            &lt;span class="c"&gt;//update the order&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span onmouseout="hideTip(event, 'fs4', 19)" onmouseover="showTip(event, 'fs4', 19)" class="i"&gt;Output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span onmouseout="hideTip(event, 'fs5', 20)" onmouseover="showTip(event, 'fs5', 20)" class="i"&gt;Update&lt;/span&gt;(&lt;span class="i"&gt;updatedOrder&lt;/span&gt;)
        }
    | &lt;span onmouseout="hideTip(event, 'fs3', 21)" onmouseover="showTip(event, 'fs3', 21)" class="i"&gt;Cancelled&lt;/span&gt; (&lt;span onmouseout="hideTip(event, 'fs9', 22)" onmouseover="showTip(event, 'fs9', 22)" class="i"&gt;mo&lt;/span&gt;) &lt;span class="k"&gt;-&amp;gt;&lt;/span&gt; &lt;span onmouseout="hideTip(event, 'fs10', 23)" onmouseover="showTip(event, 'fs10', 23)" class="i"&gt;async&lt;/span&gt; {
            &lt;span class="c"&gt;//load the order&lt;/span&gt;
            &lt;span class="c"&gt;//update the order&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span onmouseout="hideTip(event, 'fs4', 24)" onmouseover="showTip(event, 'fs4', 24)" class="i"&gt;Output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span onmouseout="hideTip(event, 'fs5', 25)" onmouseover="showTip(event, 'fs5', 25)" class="i"&gt;Update&lt;/span&gt;(&lt;span class="i"&gt;updatedOrder&lt;/span&gt;)
        }&lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;An &lt;code&gt;interpret&lt;/code&gt; phase that takes an &lt;code&gt;Output&lt;/code&gt; and executes the side-effects that the output usually represents.&lt;/p&gt;
&lt;table class="pre"&gt;&lt;tr&gt;&lt;td class="lines"&gt;&lt;pre class="fssnip"&gt;
&lt;span class="l"&gt;1: &lt;/span&gt;
&lt;span class="l"&gt;2: &lt;/span&gt;
&lt;span class="l"&gt;3: &lt;/span&gt;
&lt;span class="l"&gt;4: &lt;/span&gt;
&lt;span class="l"&gt;5: &lt;/span&gt;
&lt;/pre&gt;
&lt;/td&gt;
&lt;td class="snippet"&gt;&lt;pre class="fssnip"&gt;
&lt;span class="k"&gt;let&lt;/span&gt; &lt;span onmouseout="hideTip(event, 'fs11', 26)" onmouseover="showTip(event, 'fs11', 26)" class="i"&gt;interpret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;
    | &lt;span onmouseout="hideTip(event, 'fs5', 27)" onmouseover="showTip(event, 'fs5', 27)" class="i"&gt;Update&lt;/span&gt; &lt;span onmouseout="hideTip(event, 'fs12', 28)" onmouseover="showTip(event, 'fs12', 28)" class="i"&gt;order&lt;/span&gt; &lt;span class="k"&gt;-&amp;gt;&lt;/span&gt; &lt;span onmouseout="hideTip(event, 'fs10', 29)" onmouseover="showTip(event, 'fs10', 29)" class="i"&gt;async&lt;/span&gt; {
            &lt;span class="c"&gt;//store the updated order in the source-of-truth&lt;/span&gt;
            &lt;span class="c"&gt;//or send a message to another microservice queue&lt;/span&gt;
        }&lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;div class="tip" id="fs1"&gt;type Input =&lt;br /&gt;&amp;#160;&amp;#160;| Shipped of obj&lt;br /&gt;&amp;#160;&amp;#160;| Cancelled of obj&lt;br /&gt;&lt;br /&gt;Full name: microservicesmessagingtemp.Input&lt;/div&gt;
&lt;div class="tip" id="fs2"&gt;union case Input.Shipped: obj -&amp;gt; Input&lt;/div&gt;
&lt;div class="tip" id="fs3"&gt;union case Input.Cancelled: obj -&amp;gt; Input&lt;/div&gt;
&lt;div class="tip" id="fs4"&gt;type Output = | Update of obj&lt;br /&gt;&lt;br /&gt;Full name: microservicesmessagingtemp.Output&lt;/div&gt;
&lt;div class="tip" id="fs5"&gt;union case Output.Update: obj -&amp;gt; Output&lt;/div&gt;
&lt;div class="tip" id="fs6"&gt;val decode : msg:&amp;#39;a -&amp;gt; Input&lt;br /&gt;&lt;br /&gt;Full name: microservicesmessagingtemp.decode&lt;/div&gt;
&lt;div class="tip" id="fs7"&gt;val msg : &amp;#39;a&lt;/div&gt;
&lt;div class="tip" id="fs8"&gt;val handle : _arg1:Input -&amp;gt; Async&amp;lt;Output&amp;gt;&lt;br /&gt;&lt;br /&gt;Full name: microservicesmessagingtemp.handle&lt;/div&gt;
&lt;div class="tip" id="fs9"&gt;val mo : obj&lt;/div&gt;
&lt;div class="tip" id="fs10"&gt;val async : AsyncBuilder&lt;br /&gt;&lt;br /&gt;Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.async&lt;/div&gt;
&lt;div class="tip" id="fs11"&gt;val interpret : _arg1:Output -&amp;gt; &amp;#39;a&lt;br /&gt;&lt;br /&gt;Full name: microservicesmessagingtemp.interpret&lt;/div&gt;
&lt;div class="tip" id="fs12"&gt;val order : obj&lt;/div&gt;
</description>
      <image></image>
      <postAuthor>Krishna Vangapandu</postAuthor>
    </item>
    <item>
      <title>Organized Chaos with F#</title>
      <guid>http://tech.jet.com//blog/2015/12-10-organizedchaos</guid>
      <link>http://tech.jet.com//blog/2015/12-10-organizedchaos/index.html</link>
      <pubDate>Tue, 15 Dec 2015 03:21:57 GMT</pubDate>
      <description>&lt;img src="/images/chaosmonkey.png" style="width:400px;border-style:none;background:transparent;" /&gt;

&lt;p&gt;While we aim to increase productivity and efficiency among our engineers, we also want to ensure that we are prepared for anything (READ: we need to break lots of things before we release to the live production environment with which our customers interact) as a result, we've been injecting purposeful failure into our test environment.&lt;/p&gt;


</description>
      <image></image>
      <postAuthor>Nora Jones</postAuthor>
    </item>
    <item>
      <title>Zach Carroll teaches at Startup Institute</title>
      <guid>http://tech.jet.com//blog/2015/12-03-zach-carroll-teaches-at-startup-institute</guid>
      <link>http://tech.jet.com//blog/2015/12-03-zach-carroll-teaches-at-startup-institute/index.html</link>
      <pubDate>Thu, 03 Dec 2015 11:46:46 GMT</pubDate>
      <description>&lt;p&gt;&lt;img src="/images/zach_teaching_at_siny.jpg" alt="Zach Carroll teaching at Startup Institute" /&gt;&lt;/p&gt;

&lt;p&gt;Thanks to our Zach Carroll, a new cohort of &lt;a href="https://www.startupinstitute.com/"&gt;Startup Institute&lt;/a&gt; folks is learning Javascript! He spent the last couple days teaching an intro level class on Javascript, focusing on Objects, Arrays, and Functions.&lt;/p&gt;

&lt;p&gt;Zach actually started out as a student in their Product and Design track a few years ago -- it's where he got his start as a developer! Since then he's tried to stay involved with the organization; first, by serving as an alumni committee co-chair, and later, by teaching both the introductory class and the Javascript module on Functions, Arrays, and Objects. He loves giving back to the community that helped him in his career, as well as helping others through that 'A-ha! moment'. He also notes that teaching is a great way to test his own ability to verbalize software development and javascript concepts!&lt;/p&gt;

&lt;p&gt;Startup Institute describes their teachers as "leading practitioners in the industry" -- we think that fits Zach to a "T".&lt;/p&gt;


</description>
      <image></image>
      <postAuthor>Rachel Reese</postAuthor>
    </item>
    <item>
      <title>How Jet Build Microservices with F#</title>
      <guid>http://tech.jet.com//blog/2015/11-27-how-jet-build-microservices-with</guid>
      <link>http://tech.jet.com//blog/2015/11-27-how-jet-build-microservices-with/index.html</link>
      <pubDate>Fri, 27 Nov 2015 12:27:02 GMT</pubDate>
      <description>&lt;p&gt;Happy first day of F# Advent!&lt;/p&gt;

&lt;p&gt;I've had a lot of questions lately about our microservices, and how we're using F# to build them. So, I wanted to take this opportunity to go a bit more in-depth on what they look like. Let's start in the most basic place:&lt;/p&gt;

&lt;h3&gt;Definitions&lt;/h3&gt;

&lt;p&gt;What do microservices even mean to us? We belong to the SRP camp:&lt;/p&gt;

&lt;h1&gt;A microservice is an application of the single responsibility principle at the service level.&lt;/h1&gt;

&lt;p&gt;This means that a microservice should have one -- and only one -- reason to exist. Not necessarily that there should be only one function within the service, just that the microservice should have only one job.&lt;/p&gt;

&lt;p&gt;We also note, generally, that we should strive to create microservices that have an input and produce an output. This will eliminate many side effects, and considering up front the inputs, outputs, and transformations that the service will have, helps us to do so. While this isn't always possible (logging and sending emails happens in the real world, but when they do, they should be isolated to their own service), abiding by this rule goes far in eliminating unnecessary side effects.&lt;/p&gt;


</description>
      <image></image>
      <postAuthor>Rachel Reese</postAuthor>
    </item>
    <item>
      <title>Creating a virtual reality experience for remote candidates</title>
      <guid>http://tech.jet.com//blog/2015/09-16-creating-a-virtual-reality-experience-for-remote-candidates</guid>
      <link>http://tech.jet.com//blog/2015/09-16-creating-a-virtual-reality-experience-for-remote-candidates/index.html</link>
      <pubDate>Wed, 16 Sep 2015 08:05:25 GMT</pubDate>
      <description>&lt;p&gt;Our founder, Marc Lore, has said before that Jet is a technology company at its core. We're big fans of creating a technological solution to a problem. Case in point: We think our office environment is pretty unique and honestly, downright fabulous. So, we'd like remote candidates to experience it as soon as possible.. but how?&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/VR/nick_vr.JPG" alt="Jet team member using Oculus Rift" /&gt;&lt;/p&gt;


</description>
      <image></image>
      <postAuthor>Rachel Reese</postAuthor>
    </item>
    <item>
      <title>NYC Code Camp is October 10th!</title>
      <guid>http://tech.jet.com//blog/2015/09-09-nyc-code-camp-is-october-10th</guid>
      <link>http://tech.jet.com//blog/2015/09-09-nyc-code-camp-is-october-10th/index.html</link>
      <pubDate>Wed, 09 Sep 2015 08:35:49 GMT</pubDate>
      <description>&lt;p&gt;Are you ready for a full day of incredible content from the New York City tech community for only $10? &lt;a href="http://www.codecampnyc.org/"&gt;Code Camp NYC&lt;/a&gt; will be held October 10th at the Microsoft Offices in midtown! There's nearly a full F# track, with talks from our own &lt;a href="http://rachelree.se"&gt;Rachel Reese&lt;/a&gt; on Building Reactive Services using Functional Programming and &lt;a href="http://troykershaw.com/"&gt;Troy Kershaw&lt;/a&gt; on Composable UIs in Xamarin with F#, plus talks from both Paulmichael Blasucci and Matt Hawkins.&lt;/p&gt;


</description>
      <image>brooklyn-bridge.jpg</image>
      <postAuthor>Rachel Reese</postAuthor>
    </item>
    <item>
      <title>F# Gotham! NY's new F# conference is coming October 17th.</title>
      <guid>http://tech.jet.com//blog/2015/09-03-f-gotham-ny-s-new-f-conference-is-coming-october-17th</guid>
      <link>http://tech.jet.com//blog/2015/09-03-f-gotham-ny-s-new-f-conference-is-coming-october-17th/index.html</link>
      <pubDate>Wed, 02 Sep 2015 09:00:02 GMT</pubDate>
      <description>&lt;p&gt;It's not autumn in NYC without an F# conference! So we invented &lt;a href="http://www.fsharpgotham.com/"&gt;F# Gotham&lt;/a&gt;, an all-day event taking place at our own JetHangar in Hoboken. We're gathering October 17th to hear from such experts as &lt;a href="http://trelford.com/blog/"&gt;Phil Trelford&lt;/a&gt;, &lt;a href="http://www.roundcrisis.com/"&gt;Andrea Magnorsky&lt;/a&gt;, &lt;a href="http://www.charlespetzold.com"&gt;Charles Petzold&lt;/a&gt;, &lt;a href="http://www.ffconsultancy.com/"&gt;Jon Harrop&lt;/a&gt;, &lt;a href="https://twitter.com/jkpappas"&gt;Jack Pappas&lt;/a&gt;, and &lt;a href="https://twitter.com/trikace"&gt;Riccardo Terrell&lt;/a&gt;.&lt;/p&gt;


</description>
      <image>fgotham.jpg</image>
      <postAuthor>Rachel Reese</postAuthor>
    </item>
    <item>
      <title>Upcoming code sprints in Nashville and NYC</title>
      <guid>http://tech.jet.com//blog/2015/08-25-upcoming-code-sprints-in-nashville-and-nyc</guid>
      <link>http://tech.jet.com//blog/2015/08-25-upcoming-code-sprints-in-nashville-and-nyc/index.html</link>
      <pubDate>Tue, 25 Aug 2015 09:01:00 GMT</pubDate>
      <description>&lt;p&gt;At Jet, we believe in community and giving back. We first heard about the F# Community Code Sprint idea a couple years ago, when they popped up in &lt;a href="http://fsharpcommunitycodesprint.github.io/"&gt;London&lt;/a&gt;. They expanded to NYC and to Nashville shortly afterwards, and we're ready to host a round of code sprints again in &lt;a href="http://www.meetup.com/nashfsharp/events/223998272/"&gt;Nashville on August. 30&lt;/a&gt; and in &lt;a href="http://www.meetup.com/nyc-fsharp/events/224771690/"&gt;NYC on Sept. 12&lt;/a&gt;.&lt;/p&gt;


</description>
      <image>codesprint.jpg</image>
      <postAuthor>Rachel Reese</postAuthor>
    </item>
    <item>
      <title>Realtime Pricing, Realtime Advertising.</title>
      <guid>http://tech.jet.com//blog/2015/08-17-realtime-pricing-realtime-advertising</guid>
      <link>http://tech.jet.com//blog/2015/08-17-realtime-pricing-realtime-advertising/index.html</link>
      <pubDate>Mon, 17 Aug 2015 00:49:01 GMT</pubDate>
      <description>&lt;p&gt;&lt;img src="/images/blogcover.png" alt="Google PLAs" /&gt;&lt;/p&gt;

&lt;p&gt;When you have millions of products for sale and you have an algorithmic and dynamic pricing system for price changes on those products, what can possibly go wrong when advertising them?&lt;/p&gt;


</description>
      <image></image>
      <postAuthor>Louie Bacaj</postAuthor>
    </item>
    <item>
      <title>Rachel Reese speaks at Microservices NYC</title>
      <guid>http://tech.jet.com//blog/2015/08-17-rachel-reese-speaks-at-microservices-nyc</guid>
      <link>http://tech.jet.com//blog/2015/08-17-rachel-reese-speaks-at-microservices-nyc/index.html</link>
      <pubDate>Mon, 17 Aug 2015 09:37:34 GMT</pubDate>
      <description>&lt;p&gt;Last week, our Rachel Reese spoke at the &lt;a href="http://www.meetup.com/Microservices-NYC/"&gt;Microservices NYC&lt;/a&gt; group, in a space at &lt;a href="http://info.thoughtworks.com/new-york/"&gt;ThoughtWorks NYC&lt;/a&gt; space about our microservice architecture -- what building an event-driven microservice architecture means to us, as well as the lessons we have learned along the way. There was a fabulous discussion afterwards covering many features of our set up. If you haven't joined the microservices group yet, do so now! Better yet, offer to speak! ;) They're also on &lt;a href="https://twitter.com/microservicesny"&gt;twitter&lt;/a&gt;.&lt;/p&gt;


</description>
      <image>talks/pp-microservices.png</image>
      <postAuthor>Rachel Reese</postAuthor>
    </item>
    <item>
      <title>Training</title>
      <guid>http://tech.jet.com//blog/2015/07-20-training</guid>
      <link>http://tech.jet.com//blog/2015/07-20-training/index.html</link>
      <pubDate>Mon, 20 Jul 2015 07:30:11 GMT</pubDate>
      <description>&lt;p&gt;Part of the Jet promise is training. We have a couple internal F# workshops that get regular rotation, as well as a few in the works to help our new engineers quickly get up to speed on our stack. We also will be offering free community classes for anyone who wants to learn F#. More on that in the future, I promise!&lt;/p&gt;


</description>
      <image>JetLovesFSharp.png</image>
      <postAuthor>Rachel Reese</postAuthor>
    </item>
    <item>
      <title>Jet's Tech Talk Weekly Series</title>
      <guid>http://tech.jet.com//blog/2015/07-14-tech-talk-weekly</guid>
      <link>http://tech.jet.com//blog/2015/07-14-tech-talk-weekly/index.html</link>
      <pubDate>Tue, 14 Jul 2015 03:55:50 GMT</pubDate>
      <description>&lt;p&gt;One lovely afternoon in mid-March, back in the old days of Jet (i.e., when we were still located in our Montclair, NJ offices) our awesome &lt;a href="http://extroverteddeveloper.com/"&gt;Jim Wallace&lt;/a&gt; took the initiative to start organizing weekly tech talks. Originally, we had envisioned gathering to simply watch a conference video that we all wish we'd seen live. We took a quick vote on Slack, and it was decided that our inaugural video would be Bart de Smet's &lt;a href="http://www.infoq.com/presentations/cloud-rx"&gt;Cloud-scale Event Processing using Rx.&lt;/a&gt;. We even threw in some company-sponsored pizza to make it more fun! ;-)&lt;/p&gt;

&lt;p&gt;As we continued selecting videos, Jim whipped up a submission and voting site on Azure to figure out each week's videos. We aimed for a mix of topics, focusing on F# (of course!), DDD, Event-processing, and microservices.&lt;/p&gt;


</description>
      <image>ttw/tomas3.JPG</image>
      <postAuthor>Rachel Reese</postAuthor>
    </item>
    <item>
      <title>On how Jet chose F#</title>
      <guid>http://tech.jet.com//blog/2015/03-22-on-how-jet-chose</guid>
      <link>http://tech.jet.com//blog/2015/03-22-on-how-jet-chose/index.html</link>
      <pubDate>Sun, 22 Mar 2015 12:38:14 GMT</pubDate>
      <description>&lt;h2&gt;In the beginning&lt;/h2&gt;

&lt;p&gt;The first Jet prototype was written by our CTO, Mike Hanrahan, in his basement, in WCF. After the first developers were brought on, the first proper version of our site was spun up with CoffeeScript. However, Mike knew from the outset that he wanted to use F#, at least for the pricing engine, because of the benefits you often hear about F#: less code leading to fewer bugs, as well as code that is more robust and safer because of the type system, to name a few. As a company, we weren't sure that we should have F# anywhere else, though. After all, we're building an e-commerce web site. Isn't the web fully in the domain of C#? Plus, many of the developers on the team had an object-oriented or imperative background -- what if we wasted too much time figuring out this new language before we could even be productive?&lt;/p&gt;

&lt;p&gt;So, we started building two solutions: a C# solution and an F# solution, to see where they would take us. In the end, we chose to stick with the F# path. The main reason: we were able to deliver the same functionality with far less code. This clearly eases maintainability and reduces bugs. If you've been part of the F# community for any length of time, you know that this is a very well known feature of the language and a commonly cited reason to switch to F#. However, we had a few other unique-to-Jet reasons that we wanted to share.&lt;/p&gt;


</description>
      <image></image>
      <postAuthor>Rachel Reese</postAuthor>
    </item>
    <item>
      <title>Jet sponsors the F# Software Foundation!</title>
      <guid>http://tech.jet.com//blog/2015/01-12-jet-sponsors-FSSF</guid>
      <link>http://tech.jet.com//blog/2015/01-12-jet-sponsors-FSSF/index.html</link>
      <pubDate>Mon, 12 Jan 2015 11:27:31 GMT</pubDate>
      <description>&lt;h2&gt;What is the F# Software Foundation?&lt;/h2&gt;

&lt;p&gt;The F# Software Foundation is a community-run non-profit Corporation that aims to promote and benefit the F# Programming Language. It began in 2012, and was organized formally into a non-profit in late 2014.&lt;/p&gt;

&lt;p&gt;For more information on the Foundation, including additional &lt;a href="http://foundation.fsharp.org/history"&gt;history&lt;/a&gt;, or to read the &lt;a href="http://foundation.fsharp.org/"&gt;mission statement&lt;/a&gt; and latest &lt;a href="http://foundation.fsharp.org/board_meeting_minutes"&gt;board meeting minutes&lt;/a&gt; of the F# Software Foundation, see the &lt;a href="http://fsharp.org"&gt;fsharp.org&lt;/a&gt; site.&lt;/p&gt;


</description>
      <image>balloons.jpg</image>
      <postAuthor>Rachel Reese</postAuthor>
    </item>
  </channel>
</rss>